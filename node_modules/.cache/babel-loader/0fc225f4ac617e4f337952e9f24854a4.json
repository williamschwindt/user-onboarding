{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/Lambda Work/user-onboarding/src/components/UserForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Field, withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nconst UserForm = ({\n  errors,\n  touched,\n  values,\n  status\n}) => {\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Name\",\n    value: values.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"text\",\n    placeholder: \"Email\",\n    value: values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"password\",\n    type: \"text\",\n    placeholder: \"Password\",\n    value: values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"terms\",\n    value: values.terms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nconst FormikUserForm = withFormik({\n  mapPropsToValues() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      terms: false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"This is required\"),\n    email: Yup.string().required(\"This is required\"),\n    password: Yup.string().required(\"This is required\"),\n    terms: Yup.bool()\n  }),\n\n  handleSubmit(values, {\n    resetForm\n  }) {\n    console.log(\"Form Values:\", values);\n  }\n\n})(UserForm);\nexport default FormikUserForm;","map":{"version":3,"sources":["/Users/william/Desktop/Lambda Work/user-onboarding/src/components/UserForm.js"],"names":["React","useState","useEffect","Form","Field","withFormik","Yup","axios","UserForm","errors","touched","values","status","name","email","password","terms","FormikUserForm","mapPropsToValues","validationSchema","object","shape","string","required","bool","handleSubmit","resetForm","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,QAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA;AAA3B,CAAD,KAAyC;AACtD,SACQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,WAAW,EAAC,MAA3C;AAAkD,IAAA,KAAK,EAAED,MAAM,CAACE,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,WAAW,EAAC,OAA5C;AAAoD,IAAA,KAAK,EAAEF,MAAM,CAACG,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,WAAW,EAAC,UAA/C;AAA0D,IAAA,KAAK,EAAEH,MAAM,CAACI,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,OAA5B;AAAoC,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAJJ,EAMI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADR;AAUH,CAXD;;AAaA,MAAMC,cAAc,GAAGZ,UAAU,CAAC;AAC9Ba,EAAAA,gBAAgB,GAAG;AACf,WAAO;AACHL,MAAAA,IAAI,EAAE,EADH;AAEHC,MAAAA,KAAK,EAAE,EAFJ;AAGHC,MAAAA,QAAQ,EAAE,EAHP;AAIHC,MAAAA,KAAK,EAAE;AAJJ,KAAP;AAMH,GAR6B;;AAU9BG,EAAAA,gBAAgB,EAAEb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AACjCR,IAAAA,IAAI,EAAEP,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CAD2B;AAEjCT,IAAAA,KAAK,EAAER,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CAF0B;AAGjCR,IAAAA,QAAQ,EAAET,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CAHuB;AAIjCP,IAAAA,KAAK,EAAEV,GAAG,CAACkB,IAAJ;AAJ0B,GAAnB,CAVY;;AAiB9BC,EAAAA,YAAY,CAACd,MAAD,EAAS;AAACe,IAAAA;AAAD,GAAT,EAAwB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BjB,MAA5B;AACH;;AAnB6B,CAAD,CAAV,CAoBpBH,QApBoB,CAAvB;AAsBA,eAAeS,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Field, withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\n\n\n\nconst UserForm = ({ errors, touched, values, status }) => {\n    return (\n            <Form>\n                <Field name=\"name\" type=\"text\" placeholder=\"Name\" value={values.name}/>\n                <Field name=\"email\" type=\"text\" placeholder=\"Email\" value={values.email}/>\n                <Field name=\"password\" type=\"text\" placeholder=\"Password\" value={values.password}/>\n                <label><Field type=\"checkbox\" name=\"terms\" value={values.terms} /></label>\n\n                <button type=\"submit\">Submit</button>\n            </Form>\n    );\n}\n\nconst FormikUserForm = withFormik({\n    mapPropsToValues() {\n        return {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            terms: false\n        };\n    },\n\n    validationSchema: Yup.object().shape({\n        name: Yup.string().required(\"This is required\"),\n        email: Yup.string().required(\"This is required\"),\n        password: Yup.string().required(\"This is required\"),\n        terms: Yup.bool()\n    }),\n\n    handleSubmit(values, {resetForm, }) {\n        console.log(\"Form Values:\", values);\n    }\n})(UserForm);\n\nexport default FormikUserForm;"]},"metadata":{},"sourceType":"module"}