{"ast":null,"code":"import _slicedToArray from \"/Users/william/Desktop/Lambda Work/user-onboarding/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/william/Desktop/Lambda Work/user-onboarding/src/components/UserForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Field, withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nconst UserForm = ({\n  errors,\n  touched,\n  values,\n  status\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  useEffect(() => {\n    status && setUsers(user => [...user, status]);\n  }, [status]);\n\n  const termsHandler = term => {\n    if (term === true) {\n      return 'Terms were accepted';\n    } else return 'Terms were not accepted';\n  };\n\n  const emailValidation = value => {\n    if (value === 'williammschwindt@gmail.com') {\n      return 'Email already taken';\n    }\n\n    ;\n  };\n\n  const handleDelete = (values, {\n    setStatus\n  }) => {\n    axios.delete(\"https://reqres.in/api/users\", values).then(res => {\n      console.log(res);\n      setStatus(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Name\",\n    value: values.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), touched.name && errors.name && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, errors.name), React.createElement(Field, {\n    name: \"email\",\n    type: \"text\",\n    placeholder: \"Email\",\n    value: values.email,\n    validate: emailValidation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, errors.email), React.createElement(Field, {\n    name: \"password\",\n    type: \"text\",\n    placeholder: \"Password\",\n    value: values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, errors.password), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Accpet Terms of Survice\", React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"terms\",\n    value: values.terms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(\"div\", {\n    className: \"users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, users.map((user, key) => {\n    return React.createElement(\"div\", {\n      className: \"user\",\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: handleDelete(),\n      className: \"user-buton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, user.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, user.email), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, user.password), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, termsHandler(user.terms)));\n  })));\n};\n\nconst FormikUserForm = withFormik({\n  mapPropsToValues() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      terms: false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    email: Yup.string().required(\"Email is required\").email(\"Invalid email\"),\n    password: Yup.string().required(\"Password is required\"),\n    terms: Yup.bool()\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    setStatus\n  }) {\n    console.log(\"Form Values: \", values);\n    axios.post(\"https://reqres.in/api/users\", values).then(res => {\n      console.log(\"Posted Data: \", res);\n      setStatus(res.data);\n      resetForm();\n    });\n  }\n\n})(UserForm);\nexport default FormikUserForm;","map":{"version":3,"sources":["/Users/william/Desktop/Lambda Work/user-onboarding/src/components/UserForm.js"],"names":["React","useState","useEffect","Form","Field","withFormik","Yup","axios","UserForm","errors","touched","values","status","users","setUsers","user","termsHandler","term","emailValidation","value","handleDelete","setStatus","delete","then","res","console","log","data","catch","err","name","email","password","terms","map","key","id","FormikUserForm","mapPropsToValues","validationSchema","object","shape","string","required","bool","handleSubmit","resetForm","post"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Field, withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nconst UserForm = ({ errors, touched, values, status }) => {\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        status && setUsers(user => [...user, status]);\n    }, [status]);\n\n\n    const termsHandler = (term) => {\n        if (term === true) {\n            return 'Terms were accepted';\n        } else return 'Terms were not accepted';\n    };\n\n    const emailValidation = (value) => {\n        if(value === 'williammschwindt@gmail.com') {\n            return 'Email already taken';\n        };\n    };\n\n    const handleDelete = (values, { setStatus })  => {\n        axios\n            .delete(\"https://reqres.in/api/users\", values)\n\n            .then((res) => {\n                console.log(res);\n                setStatus(res.data);\n            })\n\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n\n\n    return (\n        <div>\n            <Form>\n                <Field name=\"name\" type=\"text\" placeholder=\"Name\" value={values.name}/>\n                {touched.name && errors.name && <p>{errors.name}</p>}\n\n                <Field name=\"email\" type=\"text\" placeholder=\"Email\" value={values.email} validate={emailValidation}/>\n                {touched.email && errors.email && <p>{errors.email}</p>}\n\n                <Field name=\"password\" type=\"text\" placeholder=\"Password\" value={values.password}/>\n                {touched.password && errors.password && <p>{errors.password}</p>}\n\n                <label>Accpet Terms of Survice<Field type=\"checkbox\" name=\"terms\" value={values.terms} /></label>\n\n                <button type=\"submit\">Submit</button>\n            </Form>\n\n            <div className=\"users\">\n                {users.map((user, key) => {\n                    return (\n                        <div className=\"user\" key={user.id}>\n                            <button onClick={handleDelete()} className=\"user-buton\">X</button>\n                            <h2>{user.name}</h2>\n                            <p>{user.email}</p>\n                            <p>{user.password}</p>\n                            <p>{termsHandler(user.terms)}</p>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    );\n}\n\nconst FormikUserForm = withFormik({\n    mapPropsToValues() {\n        return {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            terms: false\n        };\n    },\n\n    validationSchema: Yup.object().shape({\n        name: Yup.string().required(\"Name is required\"),\n        email: Yup.string().required(\"Email is required\").email(\"Invalid email\"),\n        password: Yup.string().required(\"Password is required\"),\n        terms: Yup.bool()\n    }),\n\n    handleSubmit(values, {resetForm, setStatus}) {\n        console.log(\"Form Values: \", values);\n\n        axios\n            .post(\"https://reqres.in/api/users\", values)\n\n            .then(res => {\n                console.log(\"Posted Data: \", res);\n                setStatus(res.data);\n                resetForm();\n            })\n    },\n\n})(UserForm);\n\nexport default FormikUserForm;"]},"metadata":{},"sourceType":"module"}